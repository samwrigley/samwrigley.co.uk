name: CI

on: 'push'

jobs:

  test_application:

    runs-on: ubuntu-latest

    env:
        DB_DATABASE: test
        DB_USER: root
        DB_PASSWORD: root

    steps:
      - name: Create database
        run: |
            sudo /etc/init.d/mysql start
            mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
            php-version: '8.0'
            coverage: none

      - name: Get Composer cache directory path
        id: composer-cache-dir-path
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
            path: ${{ steps.composer-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('./composer.lock') }}
            restore-keys: |
                ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Copy environment file
        run: cp .env.testing .env

      - name: Generate key
        run: php artisan key:generate --no-ansi

      - name: Run database migrations and seed
        run: php artisan migrate:fresh --seed --force --no-interaction --no-ansi

      - name: Generate sitemap
        run: php artisan sitemap:generate

      - name: Install NPM dependencies
        run: yarn install

      - name: Generate assets
        run: yarn production

      - name: Run PHP tests
        run: php artisan test --parallel

      - name: Analyse PHP
        run: ./vendor/bin/phpstan analyse

      - name: PHP Insights
        run: php artisan insights --no-interaction --min-quality=90 --min-complexity=90 --min-architecture=85 --min-style=90 --format=github-action

      - name: PHP Linting
        run: yarn lint:php

      - name: Run Laravel Server
        run: php artisan serve > /dev/null 2>&1 &

      - name: Run Cypress tests
        run: yarn cypress:run

      - name: Archive screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screenshots
          path: cypress/snapshots/**/*.screenshot.diff.png

      - name: Run Lighthouse Audits
        uses: treosh/lighthouse-ci-action@v2
        with:
            configPath: ./lighthouserc.json
            uploadArtifacts: true
            urls: |
                http://127.0.0.1:8000/
                http://127.0.0.1:8000/about
                http://127.0.0.1:8000/contact
                http://127.0.0.1:8000/blog
                http://127.0.0.1:8000/blog/test
                http://127.0.0.1:8000/blog/series
                http://127.0.0.1:8000/blog/categories

  test_assets:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache NPM dependencies
        uses: actions/cache@v1
        id: yarn-cache
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
            restore-keys: |
                ${{ runner.os }}-yarn-

      - name: Install NPM dependencies
        run: yarn install

      - name: Generate assets
        run: yarn production

      - name: Lint assets
        run: yarn lint:assets

      - name: Check Bundle size
        run: yarn test:size
